version: '3.8'

services:
  node_exporter:
    image: prom/node-exporter:latest
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    deploy:
      mode: global
        #resources:
        #  limits:
        #    cpus: '0.2'
        #    memory: '50M'
        #  reservations:
        #    cpus: '0.1'
        #    memory: '5M'
    ports:
      - '9100:9100'
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    user: root
    volumes:
      - /glusterfs/coen/prometheus:/var/lib/prometheus
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/var/lib/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
          #resources:
          #  limits:
          #    cpus: '0.2'
          #    memory: '75M'
          #  reservations:
          #    cpus: '0.1'
          #    memory: '20M'
    ports:
      - '9090:9090'
    networks:
      - monitoring

  grafana:
    image: grafana/grafana-oss:latest
    user: root
    volumes:
      - /glusterfs/coen/grafana:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
    ports:
      - '3000:3000'
    networks:
      - monitoring

networks:
  monitoring:
    driver: overlay
    attachable: true
    
configs:
  prometheus_config:
    file: ./prometheus.yml
